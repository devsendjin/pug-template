@charset "UTF-8";.form .form-group.checkbox-holder .checkbox{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);overflow:hidden;position:absolute;white-space:nowrap;height:1px;width:1px}*{box-sizing:border-box;margin:0;padding:0;outline:0;-webkit-tap-highlight-color:transparent}p{margin:5px 0 10px}a{text-decoration:none;color:inherit;cursor:pointer}ol,ul{list-style:none}input,textarea{font-family:inherit;box-shadow:none;border-radius:0}input[type=search]::-webkit-search-cancel-button{display:none}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1}input:-ms-input-placeholder,input::-ms-input-placeholder,textarea:-ms-input-placeholder,textarea::-ms-input-placeholder{opacity:1}input::placeholder,textarea::placeholder{opacity:1}button{font-family:inherit}button[type=submit],input[type=submit]{-webkit-appearance:none;-moz-appearance:none;appearance:none}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary,svg{display:block}.btn::-moz-focus-inner{border:0}.form{position:relative}.form .form-group{position:relative;width:100%;display:block}.form .form-group.message-group .textarea{scrollbar-width:none;-ms-overflow-style:none;resize:none;border:1px solid #000}.form .form-group.message-group .textarea::-webkit-scrollbar{display:none;width:0;height:0}.modal{position:fixed;display:flex;align-items:center;justify-content:center;top:0;left:0;width:100%;background-color:rgba(0,0,0,.9);overflow:auto;z-index:999;opacity:0;visibility:hidden;transition-property:opacity,visibility;transition-duration:.4s}.modal.active{opacity:1;visibility:visible}.modal .window-container{margin:auto;padding:50px 0}.modal .window-container .window{position:relative;background-color:#fff}.modal .window-container .window .close-btn{top:20px;right:20px}html.fixed,html.fixed body{overflow:hidden;position:fixed;width:100%;height:100%}.modal,body,html{height:100%}body{font-family:"Montserrat",sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:16px;line-height:1.6;font-weight:400;color:#000;display:flex;flex-direction:column;position:relative;background-color:#fff}body .main{flex-grow:1}body.lazyload-fade .lazyload,body.lazyload-fade .lazyloading{opacity:0;transition:opacity .6s}body.lazyload-fade .lazyloaded{opacity:1;transition:opacity .6s}.container{max-width:1300px;margin:0 auto;padding-left:15px;padding-right:15px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1bmRsZS5jc3MiLCJiYXNlL19yZXNldC5zY3NzIiwiYmFzZS9fbWl4aW5zLnNjc3MiLCJtb2R1bGVzL19idXR0b25zLnNjc3MiLCJtb2R1bGVzL19mb3Jtcy5zY3NzIiwibW9kdWxlcy9fbW9kYWxzLnNjc3MiLCJhcHBsaWNhdGlvbi9fY29tbW9uLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBRUEsMkMsQ0E4R0Usa0IsQ0FDQSw0QixDQUFBLG9CLENBQ0EsZSxDQUNBLGlCLENBQ0Esa0IsQ0FDQSxVLENBQ0EsUyxDQWpHRixDLENDakJFLHFCLENBQ0EsUSxDRG1CQSxTLENDaEJBLFMsQ0FDQSx1QyxDRG9CRixDLENDZkUsaUIsQ0FJRixDLENBQ0Usb0IsQ0RnQkEsYSxDQ2JGLGMsQ0RtQkEsRSxDQUZBLEUsQ0NYQSxlLENDSkMsSyxDRnNCRCxRLENDWEksbUIsQ0RZRixlLENFcEJELGUsQ0Z3QkQsZ0QsQ0VyQkMsWSxDRm1DRCx1QixDQVJBLDBCLENDSEEsUyxDRGdCQSwyQixDQ2xCQSw0QixDRFVBLDhCLENDVkEsK0IsQ0FFQSxTLENBRkEsa0IsQ0QyQkEscUIsQ0N6QkEsUyxDQUdBLE0sQ0FDQSxtQixDRDhCQSxtQixDQzNCQSxrQixDQUVFLHVCLENEd0JBLG9CLENHdkZGLGUsQ0RBQSxPLENGK0ZBLEssQ0FDQSxPLENBQ0EsVSxDQUNBLE0sQ0FDQSxNLENBQ0EsTSxDQUNBLEksQ0FDQSxJLENBQ0EsRyxDQUNBLE8sQ0FDQSxPLENBQ0EsRyxDQUZFLGEsQ0FHRixzQixDSXZHQSxRLENKOEhBLEssQ0svSEUsaUIsQ0xtSUYsaUIsQ0svSEUsaUIsQ0FDQSxVLENBQ0EsYSxDTG1JRix5QyxDSzdIRSxvQixDTGtJQSx1QixDQUNBLFcsQ0tsSkYscUIsQ0xzSkEsNEQsQ0FDRSxZLENBRUEsTyxDQUNBLFEsQ00xSkYsTSxDQUNBLGMsQ0FDRSxZLENBQ0Esa0IsQ0FDQSxzQixDQUNBLEssQ044SkEsTSxDTTNKRixVLENOOEpFLCtCLENNMUpGLGEsQ0FDRSxXLENBQ0EsUyxDQUNBLGlCLENBQ0Esc0MsQ0FDQSx1QixDTjhKRixhLENNMUpFLFMsQ0FDQSxrQixDTjhKRix3QixDQUNFLFcsQ012SkYsYyxDTjJKQSxnQyxDTTNKQSxpQixDQU9JLHFCLENBS0osMkMsQ0FDRSxRLENBQ0EsVSxDTnVKRixVLENBS0EsZSxDQUhFLGUsQ0FDQSxjLENBQ0EsVSxDQUNBLFcsQ014TUYsTSxDTmdOQSxJLENBTEEsSSxDQUVFLFcsQ0FHRixJLENBQ0UsbUMsQ0FDQSxrQyxDQUNBLGlDLENBQ0EsYyxDQUNBLGUsQ0FDQSxlLENBQ0EsVSxDQUNBLFksQ0FDQSxxQixDQUNBLGlCLENBQ0EscUIsQ0FHRixVLENBQ0UsVyxDQUdGLDRCLENBS0EsK0IsQ0FIRSxTLENBQ0Esc0IsQ0FHRiw4QixDQUNFLFMsQ0FDQSxzQixDQUdGLFUsQ0FDRSxnQixDQUNBLGEsQ0FDQSxpQixDQUNBLGtCIiwiZmlsZSI6ImJ1bmRsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5cbi5mb3JtIC5mb3JtLWdyb3VwLmNoZWNrYm94LWhvbGRlciAuY2hlY2tib3gge1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBjbGlwLXBhdGg6IGluc2V0KDUwJSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAxcHg7XG59XG5cbi8qKlxyXG4gKiDQmtCw0Log0LjRgdC/0L7Qu9GM0LfQvtCy0LDRgtGMOlxyXG4gKiAkZ3V0dGVyIC0g0L7Qv9GG0LjQvtC90LDQu9GM0L3Ri9C5INC/0LDRgNCw0LzQtdGC0YBcclxuICpcclxuICogQGluY2x1ZGUgd2lkdGgoNywgJGd1dHRlcik7XHJcbiAqIEBpbmNsdWRlIHB1bGxSaWdodCgxKTtcclxuICogbWFyZ2luLXJpZ2h0OiAkZ3V0dGVyOyAgIG9yICAgbWFyZ2luLWxlZnQ6ICRndXR0ZXI7XHJcbiAqL1xuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG5cbnAge1xuICBtYXJnaW46IDVweCAwIDEwcHggMDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxudWwsXG5vbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbn1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxudGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG5pbnB1dDotbW96LXBsYWNlaG9sZGVyLFxudGV4dGFyZWE6LW1vei1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbmlucHV0OjotbW96LXBsYWNlaG9sZGVyLFxudGV4dGFyZWE6Oi1tb3otcGxhY2Vob2xkZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG5pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG50ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG5pbnB1dDo6cGxhY2Vob2xkZXIsXG50ZXh0YXJlYTo6cGxhY2Vob2xkZXIge1xuICBvcGFjaXR5OiAxO1xufVxuXG5idXR0b24ge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbn1cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSxcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSxcbnN2ZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uYnRuOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4uZm9ybSAuZm9ybS1ncm91cC5jaGVja2JveC1ob2xkZXIgLmNoZWNrYm94IHtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgY2xpcC1wYXRoOiBpbnNldCg1MCUpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGhlaWdodDogMXB4O1xuICB3aWR0aDogMXB4O1xufVxuXG4vKipcclxuICog0JrQsNC6INC40YHQv9C+0LvRjNC30L7QstCw0YLRjDpcclxuICogJGd1dHRlciAtINC+0L/RhtC40L7QvdCw0LvRjNC90YvQuSDQv9Cw0YDQsNC80LXRgtGAXHJcbiAqXHJcbiAqIEBpbmNsdWRlIHdpZHRoKDcsICRndXR0ZXIpO1xyXG4gKiBAaW5jbHVkZSBwdWxsUmlnaHQoMSk7XHJcbiAqIG1hcmdpbi1yaWdodDogJGd1dHRlcjsgICBvciAgIG1hcmdpbi1sZWZ0OiAkZ3V0dGVyO1xyXG4gKi9cblxuLmZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5mb3JtIC5mb3JtLWdyb3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5mb3JtIC5mb3JtLWdyb3VwLm1lc3NhZ2UtZ3JvdXAgLnRleHRhcmVhIHtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xuICAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMCsgKi9cbiAgc2Nyb2xsYmFyLXdpZHRoOiBub25lO1xuICAvKiBGaXJlZm94ICovXG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTtcbiAgcmVzaXplOiBub25lO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xufVxuXG4uZm9ybSAuZm9ybS1ncm91cC5tZXNzYWdlLWdyb3VwIC50ZXh0YXJlYTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xuICAvKiBTYWZhcmkgYW5kIENocm9tZSAqL1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4ubW9kYWwge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC45KTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHotaW5kZXg6IDk5OTtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBvcGFjaXR5LCB2aXNpYmlsaXR5O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjRzO1xufVxuXG4ubW9kYWwuYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbn1cblxuLm1vZGFsIC53aW5kb3ctY29udGFpbmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nOiA1MHB4IDA7XG59XG5cbi5tb2RhbCAud2luZG93LWNvbnRhaW5lciAud2luZG93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xufVxuXG4ubW9kYWwgLndpbmRvdy1jb250YWluZXIgLndpbmRvdyAuY2xvc2UtYnRuIHtcbiAgdG9wOiAyMHB4O1xuICByaWdodDogMjBweDtcbn1cblxuaHRtbC5maXhlZCxcbmh0bWwuZml4ZWQgYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuaHRtbCxcbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbmJvZHkgLm1haW4ge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbmJvZHkubGF6eWxvYWQtZmFkZSAubGF6eWxvYWQsXG5ib2R5Lmxhenlsb2FkLWZhZGUgLmxhenlsb2FkaW5nIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuNnM7XG59XG5cbmJvZHkubGF6eWxvYWQtZmFkZSAubGF6eWxvYWRlZCB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjZzO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMzAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59IiwiKiB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcclxufVxyXG5cclxucCB7XHJcbiAgbWFyZ2luOiA1cHggMCAxMHB4IDA7XHJcbn1cclxuXHJcbmEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogaW5oZXJpdDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbnVsLCBvbCB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXQsIHRleHRhcmVhIHtcclxuICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDA7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbmlucHV0LFxyXG50ZXh0YXJlYSB7XHJcbiAgQGluY2x1ZGUgcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXHJcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gIGFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbmFydGljbGUsXHJcbmFzaWRlLFxyXG5kZXRhaWxzLFxyXG5maWdjYXB0aW9uLFxyXG5maWd1cmUsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5tYWluLFxyXG5tZW51LFxyXG5uYXYsXHJcbnNlY3Rpb24sXHJcbnN1bW1hcnksXHJcbnN2ZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuIiwiJXZpc3VhbGx5LWhpZGRlbiB7XHJcblx0Y2xpcDogcmVjdCgwIDAgMCAwKTtcclxuXHRjbGlwLXBhdGg6IGluc2V0KDUwJSk7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRoZWlnaHQ6IDFweDtcclxuXHR3aWR0aDogMXB4O1xyXG59XHJcblxyXG4ldW5zZWxlY3RhYmxlIHtcclxuXHQtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7IC8qIGlPUyBTYWZhcmkgKi9cclxuXHQtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAgIC8qIENocm9tZS9TYWZhcmkvT3BlcmEgKi9cclxuXHQta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7ICAgIC8qIEtvbnF1ZXJvciAqL1xyXG5cdC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7ICAgICAgLyogRmlyZWZveCAqL1xyXG5cdC1tcy11c2VyLXNlbGVjdDogbm9uZTsgICAgICAgLyogSW50ZXJuZXQgRXhwbG9yZXIvRWRnZSAqL1xyXG5cdHVzZXItc2VsZWN0OiBub25lOyAgICAgICAgICAgLyogTm9uLXByZWZpeGVkIHZlcnNpb24sIGN1cnJlbnRseVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90IHN1cHBvcnRlZCBieSBhbnkgYnJvd3NlciAqL1xyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBwbGFjZWhvbGRlciB3aXRoIHByZWZpeFxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xyXG5cdCY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG5cdFx0QGNvbnRlbnRcclxuXHR9XHJcblx0JjotbW96LXBsYWNlaG9sZGVyIHtcclxuXHRcdEBjb250ZW50XHJcblx0fVxyXG5cdCY6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG5cdFx0QGNvbnRlbnRcclxuXHR9XHJcblx0JjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG5cdFx0QGNvbnRlbnRcclxuXHR9XHJcblx0Jjo6cGxhY2Vob2xkZXIge1xyXG5cdFx0QGNvbnRlbnRcclxuXHR9XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIHN2ZyBiYWNrZ3JvdW5kXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiBzdmdiZygkd2lkdGg6IDAsICRoZWlnaHQ6IDAsICR1cmw6ICcnKSB7XHJcbiAgY29udGVudDogJyc7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAkd2lkdGg7XHJcbiAgaGVpZ2h0OiAkaGVpZ2h0O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkdXJsKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFN0cmluZyBSZXBsYWNlXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBmdW5jdGlvbiBzdHItcmVwbGFjZSgkc3RyaW5nLCAkc2VhcmNoLCAkcmVwbGFjZTogXCJcIikge1xyXG5cdCRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZWFyY2gpO1xyXG5cclxuXHRAaWYgJGluZGV4IHtcclxuXHRcdEByZXR1cm4gc3RyLXNsaWNlKCRzdHJpbmcsIDEsICRpbmRleCAtIDEpICsgJHJlcGxhY2UgKyBzdHItcmVwbGFjZShzdHItc2xpY2UoJHN0cmluZywgJGluZGV4ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSksICRzZWFyY2gsICRyZXBsYWNlKTtcclxuXHR9XHJcblxyXG5cdEByZXR1cm4gJHN0cmluZztcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gRm9udCBGYWNlXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiBmb250LWZhY2UoJG5hbWUsICRwYXRoLCAkd2VpZ2h0OiBudWxsLCAkc3R5bGU6IG51bGwsICRleHRzOiBlb3Qgd29mZjIgd29mZiB0dGYgc3ZnIG90Zikge1xyXG5cdCRzcmM6IG51bGw7XHJcblxyXG5cdCRleHRtb2RzOiAoXHJcblx0XHRlb3Q6IFwiP1wiLFxyXG5cdFx0c3ZnOiBcIiNcIiArIHN0ci1yZXBsYWNlKCRuYW1lLCBcIiBcIiwgXCJfXCIpXHJcblx0KTtcclxuXHJcblx0JGZvcm1hdHM6IChcclxuXHRcdG90ZjogXCJvcGVudHlwZVwiLFxyXG5cdFx0dHRmOiBcInRydWV0eXBlXCJcclxuXHQpO1xyXG5cclxuXHRAZWFjaCAkZXh0IGluICRleHRzIHtcclxuXHRcdCRleHRtb2Q6IGlmKG1hcC1oYXMta2V5KCRleHRtb2RzLCAkZXh0KSwgJGV4dCArIG1hcC1nZXQoJGV4dG1vZHMsICRleHQpLCAkZXh0KTtcclxuXHRcdCRmb3JtYXQ6IGlmKG1hcC1oYXMta2V5KCRmb3JtYXRzLCAkZXh0KSwgbWFwLWdldCgkZm9ybWF0cywgJGV4dCksICRleHQpO1xyXG5cdFx0JHNyYzogYXBwZW5kKCRzcmMsIHVybChxdW90ZSgkcGF0aCArIFwiLlwiICsgJGV4dG1vZCkpIGZvcm1hdChxdW90ZSgkZm9ybWF0KSksIGNvbW1hKTtcclxuXHR9XHJcblxyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6IHF1b3RlKCRuYW1lKTtcclxuXHRcdGZvbnQtc3R5bGU6ICRzdHlsZTtcclxuXHRcdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xyXG5cdFx0Zm9udC1kaXNwbGF5OiBvcHRpb25hbDtcclxuXHRcdHNyYzogJHNyYztcclxuXHR9XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIGdyYWRpZW50IGJhY2tncm91bmQtaW1hZ2VcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuQG1peGluIGJnaSgkY29sb3I6ICMwMDAwMDAsICRoZWlnaHQ6IDFweCwgJGJvdHRvbTogMCkge1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsIHRyYW5zcGFyZW50ICRib3R0b20sICRjb2xvciAkYm90dG9tLCAkY29sb3IgJGhlaWdodCskYm90dG9tLCB0cmFuc3BhcmVudCAkaGVpZ2h0KyRib3R0b20pO1xyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyB1bmRlcmxpbmUgYW5pbWF0aW9uXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiB1bmRlcmxpbmUtZW5kLXN0YXRlKCRiZ1NpemVYOiAxMDAlLCAkYmdTaXplWTogMTAwJSwgJGJnUG9zOiBsZWZ0LCAkYmVoYXZpb3I6IG51bGwsICR0cnNQcm9wczogbnVsbCwgJHRyc0R1cmF0aW9uOiBudWxsKSB7XHJcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogJGJnUG9zO1xyXG5cdEBpZiAoJGJlaGF2aW9yID09IG51bGwpIHtcclxuXHRcdGJhY2tncm91bmQtc2l6ZTogJGJnU2l6ZVggJGJnU2l6ZVk7XHJcblx0fVxyXG5cdEBpZiAoJGJlaGF2aW9yID09IHNob3ctb24taG92ZXIpIHtcclxuXHRcdGJhY2tncm91bmQtc2l6ZTogMTAwJSAkYmdTaXplWTtcclxuXHR9XHJcblx0QGlmICgkYmVoYXZpb3IgPT0gcmVtb3ZlLW9uLWhvdmVyKSB7XHJcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDAgJGJnU2l6ZVk7XHJcblx0fVxyXG5cdEBpZiAoJHRyc1Byb3BzICE9IG51bGwpIHtcclxuXHRcdHRyYW5zaXRpb24tcHJvcGVydHk6IHVucXVvdGUoJHRyc1Byb3BzKTtcclxuXHR9XHJcblx0QGlmICgkdHJzRHVyYXRpb24gIT0gbnVsbCkge1xyXG5cdFx0dHJhbnNpdGlvbi1kdXJhdGlvbjogJHRyc0R1cmF0aW9uO1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIHVuZGVybGluZS1zdGFydC1zdGF0ZSgkY29sb3I6ICMwMDAwMDAsICRiZ1NpemVYOiAwLCAkYmdTaXplWTogMTAwJSwgJGJnUG9zOiBsZWZ0LCAkdHJzUHJvcHM6IGJhY2tncm91bmQtc2l6ZSwgJHRyc0R1cmF0aW9uOiAuM3MsICRiZWhhdmlvcjogbnVsbCwgJGhlaWdodDogMXB4LCAkYm90dG9tOiAwKSB7XHJcblx0QGluY2x1ZGUgYmdpKCRjb2xvciwgJGhlaWdodCwgJGJvdHRvbSk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAkYmdQb3M7XHJcblx0dHJhbnNpdGlvbi1wcm9wZXJ0eTogdW5xdW90ZSgkdHJzUHJvcHMpO1xyXG5cdHRyYW5zaXRpb24tZHVyYXRpb246ICR0cnNEdXJhdGlvbjtcclxuXHJcblx0QGlmICgkYmVoYXZpb3IgPT0gbnVsbCkge1xyXG5cdFx0YmFja2dyb3VuZC1zaXplOiAkYmdTaXplWCAkYmdTaXplWTtcclxuXHR9XHJcblx0QGlmICgkYmVoYXZpb3IgPT0gc2hvdy1vbi1ob3Zlcikge1xyXG5cdFx0YmFja2dyb3VuZC1zaXplOiAwICRiZ1NpemVZO1xyXG5cdH1cclxuXHJcblx0QGlmICgkYmVoYXZpb3IgPT0gcmVtb3ZlLW9uLWhvdmVyKSB7XHJcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDEwMCUgJGJnU2l6ZVk7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gdW5kZXJsaW5lKCRjb2xvcjogIzAwMDAwMCwgJGJnU2l6ZVg6IDAsICRiZ1NpemVZOiAxMDAlLCAkYmdQb3M6IGxlZnQsICR0cnNQcm9wczogYmFja2dyb3VuZC1zaXplLCAkdHJzRHVyYXRpb246IC4zcywgJGJlaGF2aW9yOiBzaG93LW9uLWhvdmVyLCAkaGVpZ2h0OiAxcHgsICRib3R0b206IDApIHtcclxuXHRAaW5jbHVkZSB1bmRlcmxpbmUtc3RhcnQtc3RhdGUoJGNvbG9yLCAkYmdTaXplWCwgJGJnU2l6ZVksICRiZ1BvcywgJHRyc1Byb3BzLCAkdHJzRHVyYXRpb24sICRiZWhhdmlvciwgJGhlaWdodCwgJGJvdHRvbSk7XHJcblx0Ji5ob3ZlciwgJjpob3ZlciB7XHJcblx0XHRAaW5jbHVkZSB1bmRlcmxpbmUtZW5kLXN0YXRlKCRiZ1NpemVYLCAkYmdTaXplWSwgJGJnUG9zLCAkYmVoYXZpb3IpO1xyXG5cdH1cclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gbWFrZSBzY3JvbGwgYmFyIGludmlzaWJsZSwgYnV0IHN0aWxsIHdvcmtpbmdcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuQG1peGluIGludmlzaWJsZVNjcm9sbGJhciB7XHJcblx0LW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyAvKiBJbnRlcm5ldCBFeHBsb3JlciAxMCsgKi9cclxuXHRzY3JvbGxiYXItd2lkdGg6IG5vbmU7IC8qIEZpcmVmb3ggKi9cclxuXHQmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcblx0XHRkaXNwbGF5OiBub25lOyAvKiBTYWZhcmkgYW5kIENocm9tZSAqL1xyXG5cdFx0d2lkdGg6IDA7XHJcblx0XHRoZWlnaHQ6IDA7XHJcblx0fVxyXG5cdC1tcy1vdmVyZmxvdy1zdHlsZTogbm9uZTsgLy8gRURHRVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyByZXNldCBidXR0b24gc3R5bGVzXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiBidG5SZXNldCgkYmdjOiB0cmFuc3BhcmVudCkge1xyXG5cdGJvcmRlcjogbm9uZTtcclxuXHRvdXRsaW5lOiBub25lO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICRiZ2M7XHJcblx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0Jjo6LW1vei1mb2N1cy1pbm5lciB7XHJcblx0XHRib3JkZXI6IDA7XHJcblx0fVxyXG59XHJcblxyXG4vL9Cf0YDQuNC90YbQuNC/INGA0LDQsdC+0YLRiyDRgdC10YLQutC4OiAo0L7Qv9C40YHQsNC90LjQtSDRhNGD0L3QutGG0LjQuCBjYWxjV2lkdGgpXHJcbi8v0LLQtdC30LTQtSDQvtGC0L3QuNC80LDQtdC8IFwiLTFcIiDRgi7Qui4g0L/QvtGB0LvQtSDQv9C+0YHQu9C10LTQvdC10Lkg0LrQvtC70L7QvdC60Lgg0L3QtdGCINC+0YLRgdGC0YPQv9CwXHJcbi8vMTAwJSAtICgjeyRndXR0ZXJ9ICogKCN7JGNvbHN9IC0gMSkpICAtICDQstGL0YfQuNGB0LvRj9C10Lwg0YHRg9C80LzRgyDRiNC40YDQuNC9INCy0YHQtdGFINC60L7Qu9C+0L3QvtC6INGC0LXQutGD0YnQtdCz0L4g0LrQvtC90YLQtdC50L3QtdGA0LAg0LHQtdC3INC+0YLRgdGC0YPQv9C+INC80LXQttC00YMg0LrQvtC70L7QvdC60LDQvNC4XHJcbi8vMTAwJSAtICg80L7RgtGB0YLRg9C/INC80LXQttC00YMg0LrQvtC70L7QvdC60LDQvNC4PiAqIDzQvtCx0YnQtdC1INC60L7Quy3QstC+INC60L7Qu9C+0L3QvtC6PiAtIDwxINC60L7Qu9C+0L3QutCwPikpXHJcbi8vXHJcbi8vKCgxMDAlIC0gKCN7JGd1dHRlcn0gKiAoI3skY29sc30gLSAxKSkpIC8gI3skY29sc30pICAtICDQstGL0YfQuNGB0LvRj9C10Lwg0YjQuNGA0LjQvdGDIDEt0Lkg0LrQvtC70L7QvdC60Lgg0LHQtdC3INC+0YLRgdGC0YPQv9C+0LIg0LzQtdC20LTRgyDQutC+0LvQvtC90LrQsNC80LhcclxuLy8xMDAlIC0gKDzQvtGC0YHRgtGD0L8g0LzQtdC20LTRgyDQutC+0LvQvtC90LrQsNC80Lg+ICogKDzQvtCx0YnQtdC1INC60L7Quy3QstC+INC60L7Qu9C+0L3QvtC6PiAtIDwxINC60L7Qu9C+0L3QutCwPikpIC8gPNC+0LHRidC10LUg0LrQvtC7LdCy0L4g0LrQvtC70L7QvdC+0Lo+XHJcbi8vXHJcbi8vY2FsYygoKDEwMCUgLSAoI3skZ3V0dGVyfSAqICgjeyRjb2xzfSAtIDEpKSkgLyAjeyRjb2xzfSkgKiAjeyRudW19ICsgI3skZ3V0dGVyfSAqICgjeyRudW19IC0gMSkgKyAjeyRndXR0ZXJTaGlmdH0pICAtICDRgdGH0LjRgtCw0LXQvCDRiNC40YDQuNC90YMg0LrQvtC70L7QvdC+0Log0LHQu9C+0LrQsCArINC+0YLRgdGC0YPQv9GLINC80LXQttC00YNcclxuLy8g0LrQvtC70L7QvdC60LDQvNC4ICsg0LTQvtCx0LDQstC70Y/QtdC8INC+0YLRgdGC0YPQv9GLINC80LXQttC00YMg0LrQvtC70L7QutCw0LzQuCwg0LXRgdC70Lgg0L3Rg9C20L3QviDRgdC00LLQuNC90YPRgtGMINCx0LvQvtC6XHJcbi8vICgxMDAlIC0gKDzQvtGC0YHRgtGD0L8g0LzQtdC20LTRgyDQutC+0LvQvtC90LrQsNC80Lg+ICogPNC+0LHRidC10LUg0LrQvtC7LdCy0L4g0LrQvtC70L7QvdC+0Lo+IC0gPDEg0LrQvtC70L7QvdC60LA+KSkgLyA80L7QsdGJ0LXQtSDQutC+0Lst0LLQviDQutC+0LvQvtC90L7Quj4gKiA80YLRgNC10LHRg9C10LzQvtC1INC60L7Quy3QstC+INC60L7Qu9C+0L3QvtC6PiArIDzQvtGC0YHRgtGD0L8+ICogKDzRgtGA0LXQsdGD0LXQvNC+0LUg0LrQvtC7LdCy0L4g0LrQvtC70L7QvdC+0Lo+IC0gPDEg0LrQvtC70L7QvdC60LA+ICsgPNC+0YLRgdGC0YPQvyDQvNC10LbQtNGDINC60L7Qu9C+0L3QutCw0LzQuCjQvNC+0LbQtdGCINCx0YvRgtGMINC+0YLRgNC40YbQsNGC0LXQu9GM0L3Ri9C5KT4pXHJcblxyXG4vKipcclxuICog0JrQsNC6INC40YHQv9C+0LvRjNC30L7QstCw0YLRjDpcclxuICogJGd1dHRlciAtINC+0L/RhtC40L7QvdCw0LvRjNC90YvQuSDQv9Cw0YDQsNC80LXRgtGAXHJcbiAqXHJcbiAqIEBpbmNsdWRlIHdpZHRoKDcsICRndXR0ZXIpO1xyXG4gKiBAaW5jbHVkZSBwdWxsUmlnaHQoMSk7XHJcbiAqIG1hcmdpbi1yaWdodDogJGd1dHRlcjsgICBvciAgIG1hcmdpbi1sZWZ0OiAkZ3V0dGVyO1xyXG4gKi9cclxuXHJcbkBmdW5jdGlvbiBjYWxjV2lkdGgoJG51bSwgJGd1dHRlclNoaWZ0OiAwcHgsICRjb2xzOiAkY29scywgJGd1dHRlcjogJGd1dHRlcikge1xyXG5cdEByZXR1cm4gY2FsYygoKDEwMCUgLSAoI3skZ3V0dGVyfSAqICgjeyRjb2xzfSAtIDEpKSkgLyAjeyRjb2xzfSkgKiAjeyRudW19ICsgI3skZ3V0dGVyfSAqICgjeyRudW19IC0gMSkgKyAjeyRndXR0ZXJTaGlmdH0pO1xyXG59XHJcblxyXG4vLyDRiNC40YDQuNC90LAg0LrQvtC70L7QvdC60LhcclxuQG1peGluIHdpZHRoKCRudW0sICRndXR0ZXJTaGlmdDogMHB4LCAkY29sczogJGNvbHMsICRndXR0ZXI6ICRndXR0ZXIpIHtcclxuXHR3aWR0aDogY2FsY1dpZHRoKCRudW0sICRndXR0ZXJTaGlmdCwgJGNvbHMsICRndXR0ZXIpO1xyXG59XHJcblxyXG4vLyRwcm9wZXJ0eSAtINC30LDQtNCw0ZHQvCDQuNC70LggbWFyZ2luINC40LvQuCBwYWRkaW5nLCDQv9C+INGD0LzQvtC70YfQsNC90LjRjiBtYXJnaW5cclxuLy8g0LTQvtCx0LDQstC70Y/QtdC8INC+0YLRgdGC0YPQvyDRgdC70LXQstCwXHJcbkBtaXhpbiBwdWxsTGVmdCgkbnVtLCAkZ3V0dGVyU2hpZnQ6IDBweCwgJHByb3BlcnR5OiBtYXJnaW4sICRjb2xzOiAkY29scywgJGd1dHRlcjogJGd1dHRlcikge1xyXG5cdCN7JHByb3BlcnR5fS1sZWZ0OiBjYWxjV2lkdGgoJG51bSwgJGd1dHRlclNoaWZ0LCAkY29scywgJGd1dHRlcik7XHJcbn1cclxuXHJcbi8vJHByb3BlcnR5IC0g0LfQsNC00LDRkdC8INC40LvQuCBtYXJnaW4g0LjQu9C4IHBhZGRpbmcsINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIG1hcmdpblxyXG4vLyDQtNC+0LHQsNCy0LvRj9C10Lwg0L7RgtGB0YLRg9C/INGB0L/RgNCw0LLQsFxyXG5AbWl4aW4gcHVsbFJpZ2h0KCRudW0sICRndXR0ZXJTaGlmdDogMHB4LCAkcHJvcGVydHk6IG1hcmdpbiwgJGNvbHM6ICRjb2xzLCAkZ3V0dGVyOiAkZ3V0dGVyKSB7XHJcblx0I3skcHJvcGVydHl9LXJpZ2h0OiBjYWxjV2lkdGgoJG51bSwgJGd1dHRlclNoaWZ0LCAkY29scywgJGd1dHRlcik7XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIGN1c3RvbSBncmlkXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiBncmlkLXJvdy1mbGV4KCRvZmZzZXQpe1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0bWFyZ2luLWxlZnQ6ICgkb2Zmc2V0IC8gLTIpO1xyXG5cdG1hcmdpbi1yaWdodDogKCRvZmZzZXQgLyAtMik7XHJcbn1cclxuXHJcbkBtaXhpbiBncmlkLWNvbCgkb2Zmc2V0KXtcclxuXHRtYXJnaW4tbGVmdDogKCRvZmZzZXQgLyAyKTtcclxuXHRtYXJnaW4tcmlnaHQ6ICgkb2Zmc2V0IC8gMik7XHJcbn1cclxuXHJcbkBtaXhpbiBncmlkLXNpemUoJG4sICRjb2x1bW5zLCAkb2Zmc2V0KXtcclxuXHR3aWR0aDogI3tjYWxjKDEwMCUgLyAjeyRjb2x1bW5zfSAqICN7JG59IC0gI3skb2Zmc2V0fSl9O1xyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBkZXRlY3QgSUUxMCBhbmQgYWJvdmVcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuQG1peGluIElFMTB1cCgpe1xyXG5cdEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSwgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IG5vbmUpIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gQ2VudGVyaW5nXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbkBtaXhpbiBjZW50ZXIoJGF4aXM6ICd4eScpIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0QGlmICRheGlzID09ICd4eScge1xyXG5cdFx0dG9wOiA1MCU7XHJcblx0XHRsZWZ0OiA1MCU7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHR9IEBlbHNlIGlmICRheGlzID09ICd5JyB7XHJcblx0XHR0b3A6IDUwJTtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuXHR9IEBlbHNlIGlmICRheGlzID09ICd4JyB7XHJcblx0XHRsZWZ0OiA1MCU7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblx0fVxyXG59XHJcbiIsIi5idG4ge1xyXG4gICY6Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gIH1cclxufVxyXG4iLCJAaW1wb3J0ICcuLi9iYXNlL2NvbmZpZyc7XHJcbkBpbXBvcnQgJy4uL2Jhc2UvbWl4aW5zJztcclxuXHJcbi8vIGNvbW1vbi1zdHlsZXNcclxuLmZvcm0ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgICAmLmFjdGl2ZSB7XHJcbiAgICAgIC5pbnB1dDpub3QoW3R5cGU9XCJzdWJtaXRcIl0pIHt9XHJcblxyXG4gICAgICAucGxhY2Vob2xkZXIge31cclxuICAgIH1cclxuXHJcbiAgICAmLmludmFsaWQge1xyXG4gICAgICAuaW5wdXQ6bm90KFt0eXBlPVwic3VibWl0XCJdKSB7fVxyXG4gICAgfVxyXG5cclxuICAgICYubWVzc2FnZS1ncm91cCB7XHJcbiAgICAgIC50ZXh0YXJlYSB7XHJcbiAgICAgICAgQGluY2x1ZGUgaW52aXNpYmxlU2Nyb2xsYmFyO1xyXG4gICAgICAgIHJlc2l6ZTogbm9uZTtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2s7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5wbGFjZWhvbGRlciB7fVxyXG4gICAgfVxyXG5cclxuICAgICYuY2hlY2tib3gtaG9sZGVyIHtcclxuICAgICAgLmNoZWNrYm94IHtcclxuICAgICAgICBAZXh0ZW5kICV2aXN1YWxseS1oaWRkZW47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaW5wdXQ6bm90KFt0eXBlPVwic3VibWl0XCJdKTpub3QoW3R5cGU9XCJjaGVja2JveFwiXSkge31cclxuXHJcbiAgICAucGxhY2Vob2xkZXIge31cclxuICB9XHJcbn1cclxuIiwiLm1vZGFsIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOSk7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgei1pbmRleDogOTk5O1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IG9wYWNpdHksIHZpc2liaWxpdHk7XHJcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC40cztcclxuXHJcbiAgJi5hY3RpdmUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgfVxyXG5cclxuICAud2luZG93LWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiA1MHB4IDA7XHJcblxyXG4gICAgLndpbmRvdyB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuXHJcbiAgICAgIC5jbG9zZS1idG4ge1xyXG4gICAgICAgIHRvcDogMjBweDtcclxuICAgICAgICByaWdodDogMjBweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJodG1sLmZpeGVkLFxyXG5odG1sLmZpeGVkIGJvZHkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuaHRtbCwgYm9keSB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogJG1vbnRzZXJyYXQ7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGNvbG9yOiAkYmxhY2s7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG5cclxuICAubWFpbiB7XHJcbiAgICBmbGV4LWdyb3c6IDE7XHJcbiAgfVxyXG59XHJcblxyXG5ib2R5Lmxhenlsb2FkLWZhZGUge1xyXG4gIC5sYXp5bG9hZCwgLmxhenlsb2FkaW5nIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC42cztcclxuICB9XHJcblxyXG4gIC5sYXp5bG9hZGVkIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC42cztcclxuICB9XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogMTMwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG59XHJcbiJdfQ== */
